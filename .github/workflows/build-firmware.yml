name: 编译Hi3798mv100固件（最终解决.config生成问题）

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: 拉取源码
        uses: actions/checkout@v4
        with:
          repository: zjkanjie/HiSTBLinuxV100R005C00SPC060
          path: HiSTBLinux

      - name: 安装依赖
        run: |
          sudo apt update
          sudo apt remove -y make
          wget http://archive.ubuntu.com/ubuntu/pool/main/m/make-dfsg/make_3.81-8.2ubuntu3_amd64.deb
          sudo dpkg -i make_3.81-8.2ubuntu3_amd64.deb
          sudo apt install -y gcc-arm-linux-gnueabihf gettext bison flex bc zlib1g-dev libncurses5-dev lzma git build-essential
          sudo ln -sf /bin/bash /bin/sh
          arm-linux-gnueabihf-gcc --version | head -n1  # 验证工具链

      - name: 准备内核源码
        run: |
          cd HiSTBLinux
          mkdir -p third_party/open_source/
          wget https://www.kernel.org/pub/linux/kernel/v4.x/linux-4.4.35.tar.gz -O third_party/open_source/linux-4.4.35.tar.gz
          tar -zxf third_party/open_source/linux-4.4.35.tar.gz -C source/kernel/
          mv source/kernel/linux-4.4.35 source/kernel/linux-4.4.y
          # 验证内核源码完整性
          if [ ! -f "source/kernel/linux-4.4.y/Kconfig" ]; then
            echo "Error: 内核源码缺失Kconfig文件"
            exit 1
          fi

      - name: 修复dtc错误
        run: |
          cd HiSTBLinux/source/kernel/linux-4.4.y
          make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- prepare
          make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- scripts/dtc
          sed -i 's/^extern YYLTYPE yylloc;/#extern YYLTYPE yylloc;/' scripts/dtc/dtc-lexer.lex.c

      - name: 初始化SDK
        run: |
          cd HiSTBLinux
          bash server_install.sh
          cp configs/hi3798mv100/hi3798mdmo1g_hi3798mv100_cfg.mak ./cfg.mak
          source ./env.sh
          env | grep -E '^ARCH|^CROSS_COMPILE' > sdk_env.txt

      - name: 手动复制defconfig并强制生成.config（带详细日志）
        run: |
          cd HiSTBLinux
          source sdk_env.txt
          KERNEL_DIR="source/kernel/linux-4.4.y"
          # 1. 确认SDK中defconfig的实际文件名（关键！可能存在拼写差异）
          SDK_DEFCONFIG_PATH="configs/hi3798mv100"
          echo "SDK配置目录内容（检查defconfig文件名）："
          ls -la $SDK_DEFCONFIG_PATH
          # 假设正确文件名为hi3798mv100_defconfig，若实际不同需修改此处
          SDK_DEFCONFIG="$SDK_DEFCONFIG_PATH/hi3798mv100_defconfig"

          # 2. 验证defconfig存在且非空
          if [ ! -f "$SDK_DEFCONFIG" ] || [ ! -s "$SDK_DEFCONFIG" ]; then
            echo "Error: defconfig不存在或为空 → $SDK_DEFCONFIG"
            exit 1
          fi
          echo "defconfig前5行内容（确认有效）："
          head -n5 $SDK_DEFCONFIG

          # 3. 复制defconfig到内核配置目录
          mkdir -p $KERNEL_DIR/arch/arm/configs/
          cp -f $SDK_DEFCONFIG $KERNEL_DIR/arch/arm/configs/
          echo "复制后内核配置目录内容："
          ls -la $KERNEL_DIR/arch/arm/configs/

          # 4. 进入内核目录，执行defconfig生成.config（输出完整日志）
          cd $KERNEL_DIR
          echo "执行命令：make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- hi3798mv100_defconfig"
          make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- hi3798mv100_defconfig V=1 2>&1 | tee defconfig.log
          # 检查defconfig命令是否报错
          if grep -q "error" defconfig.log; then
            echo "defconfig生成失败，日志："
            cat defconfig.log
            exit 1
          fi

          # 5. 若.config仍未生成，手动创建基础.config（应急方案）
          if [ ! -f ".config" ]; then
            echo "警告：defconfig未生成.config，手动创建基础配置"
            make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- menuconfig < <(echo -e "S\n\n")  # 保存默认配置
          fi

          # 6. 最终验证.config
          if [ ! -f ".config" ]; then
            echo "Error: .config仍未生成"
            exit 1
          else
            echo ".config生成成功，前5行："
            head -n5 .config
          fi

      - name: 配置内核功能并编译
        run: |
          cd HiSTBLinux/source/kernel/linux-4.4.y
          # 补充配置
          sed -i '/CONFIG_USB_PRINTER/d' .config
          echo "CONFIG_USB_PRINTER=y" >> .config
          # 编译内核
          make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j2 V=1

      - name: 编译完整固件
        run: |
          cd HiSTBLinux
          source sdk_env.txt
          make build -j4 2>&1 | tee build.log

      - name: 上传产物与日志
        uses: actions/upload-artifact@v4
        with:
          name: firmware-and-logs
          path: |
            HiSTBLinux/out/hi3798mv100/*
            HiSTBLinux/source/kernel/linux-4.4.y/defconfig.log
            HiSTBLinux/build.log
