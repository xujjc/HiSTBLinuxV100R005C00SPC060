name: Hi3798mv100在线编译（修复dtc-lexer.lex.c缺失问题）

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 拉取源码
        uses: actions/checkout@v4
        with:
          repository: zjkanjie/HiSTBLinuxV100R005C00SPC060
          path: HiSTBLinux

      - name: 安装依赖（确保flex可用）
        run: |
          sudo apt update
          sudo apt remove -y make
          wget http://archive.ubuntu.com/ubuntu/pool/main/m/make-dfsg/make_3.81-8.2ubuntu3_amd64.deb
          sudo dpkg -i make_3.81-8.2ubuntu3_amd64.deb
          # 确保flex（生成dtc-lexer.lex.c的工具）已安装
          sudo apt install -y gcc-arm-linux-gnueabihf gettext bison flex bc zlib1g-dev libncurses5-dev lzma git build-essential
          sudo ln -sf /bin/bash /bin/sh
          # 验证flex版本
          flex --version

      - name: 准备内核源码
        run: |
          cd HiSTBLinux
          mkdir -p third_party/open_source/
          wget https://www.kernel.org/pub/linux/kernel/v4.x/linux-4.4.35.tar.gz -O third_party/open_source/linux-4.4.35.tar.gz
          rm -rf source/kernel/linux-4.4.y
          tar -zxf third_party/open_source/linux-4.4.35.tar.gz -C source/kernel/
          mv source/kernel/linux-4.4.35 source/kernel/linux-4.4.y

      - name: 设置环境变量
        run: |
          cd HiSTBLinux
          cat > env.sh << 'EOF'
          export ARCH=arm
          export CROSS_COMPILE=arm-linux-gnueabihf-
          export PATH=/usr/bin:$PATH
          EOF
          source ./env.sh
          echo "环境变量：ARCH=$ARCH, CROSS_COMPILE=$CROSS_COMPILE"

      - name: 生成.config
        run: |
          cd HiSTBLinux
          source ./env.sh
          cp configs/hi3798mv100/hi3798mdmo1g_hi3798mv100_cfg.mak ./cfg.mak
          KERNEL_DIR="source/kernel/linux-4.4.y"
          cd $KERNEL_DIR
          make ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE multi_v7_defconfig V=1

      - name: 生成dtc文件并修复（核心修复）
        run: |
          cd HiSTBLinux
          source ./env.sh
          KERNEL_DIR="source/kernel/linux-4.4.y"
          cd $KERNEL_DIR
          
          # 1. 确保dtc目录存在
          DTC_DIR="scripts/dtc"
          if [ ! -d "$DTC_DIR" ]; then
            echo "Error: dtc目录不存在，内核源码不完整"
            exit 1
          fi
          
          # 2. 生成dtc-lexer.lex.c（依赖flex）
          echo "生成dtc相关文件（包括dtc-lexer.lex.c）..."
          make ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE scripts/dtc V=1 2>&1 | tee dtc_build.log
          
          # 3. 检查dtc-lexer.lex.c是否生成
          TARGET_FILE="$DTC_DIR/dtc-lexer.lex.c"
          if [ ! -f "$TARGET_FILE" ]; then
            echo "Error: dtc-lexer.lex.c未生成，生成日志："
            cat dtc_build.log
            exit 1
          fi
          
          # 4. 修复yylloc重复定义
          sed -i 's/^extern YYLTYPE yylloc;/#extern YYLTYPE yylloc;/' "$TARGET_FILE"
          echo "dtc修复完成"

      - name: 配置内核功能
        run: |
          cd HiSTBLinux
          source ./env.sh
          cd source/kernel/linux-4.4.y
          echo "CONFIG_DEVTMPFS=y" >> .config
          echo "CONFIG_CGROUPS=y" >> .config
          echo "CONFIG_USB_PRINTER=y" >> .config
          echo "CONFIG_RTL8188FTV=y" >> .config

      - name: 编译内核和固件
        run: |
          cd HiSTBLinux
          source ./env.sh
          make linux -j4 2>&1 | tee kernel.log
          make build -j4 2>&1 | tee build.log

      - name: 上传产物
        uses: actions/upload-artifact@v4
        with:
          name: hi3798mv100-firmware
          path: |
            HiSTBLinux/out/hi3798mv100/*
            HiSTBLinux/kernel.log
            HiSTBLinux/build.log
