name: Hi3798mv100在线编译（修复defconfig不存在问题）

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 拉取源码
        uses: actions/checkout@v4
        with:
          repository: zjkanjie/HiSTBLinuxV100R005C00SPC060
          path: HiSTBLinux

      - name: 安装依赖
        run: |
          sudo apt update
          sudo apt remove -y make
          wget http://archive.ubuntu.com/ubuntu/pool/main/m/make-dfsg/make_3.81-8.2ubuntu3_amd64.deb
          sudo dpkg -i make_3.81-8.2ubuntu3_amd64.deb
          sudo apt install -y gcc-arm-linux-gnueabihf gettext bison flex bc zlib1g-dev libncurses5-dev lzma git build-essential
          sudo ln -sf /bin/bash /bin/sh
          arm-linux-gnueabihf-gcc --version | head -n1

      - name: 准备内核源码
        run: |
          cd HiSTBLinux
          mkdir -p third_party/open_source/
          wget https://www.kernel.org/pub/linux/kernel/v4.x/linux-4.4.35.tar.gz -O third_party/open_source/linux-4.4.35.tar.gz
          rm -rf source/kernel/linux-4.4.y
          tar -zxf third_party/open_source/linux-4.4.35.tar.gz -C source/kernel/
          mv source/kernel/linux-4.4.35 source/kernel/linux-4.4.y

      - name: 设置环境变量
        run: |
          cd HiSTBLinux
          cat > env.sh << 'EOF'
          export ARCH=arm
          export CROSS_COMPILE=arm-linux-gnueabihf-
          export PATH=/usr/bin:$PATH
          EOF
          source ./env.sh
          echo "环境变量：ARCH=$ARCH, CROSS_COMPILE=$CROSS_COMPILE"

      - name: 复制机型配置并选择defconfig（核心修复）
        run: |
          cd HiSTBLinux
          source ./env.sh
          # 复制机型配置
          cp configs/hi3798mv100/hi3798mdmo1g_hi3798mv100_cfg.mak ./cfg.mak

          # 1. 检查内核配置目录中的defconfig
          KERNEL_DIR="source/kernel/linux-4.4.y"
          KERNEL_DEFCONFIG_DIR="$KERNEL_DIR/arch/arm/configs"
          echo "=== 内核配置目录文件（可用defconfig） ==="
          ls -la $KERNEL_DEFCONFIG_DIR  # 列出所有可用defconfig

          # 2. 若hi3798mv100_defconfig不存在，使用ARM通用配置（multi_v7_defconfig）
          TARGET_DEFCONFIG="hi3798mv100_defconfig"
          if [ ! -f "$KERNEL_DEFCONFIG_DIR/$TARGET_DEFCONFIG" ]; then
            echo "未找到$TARGET_DEFCONFIG，使用ARM通用配置"
            TARGET_DEFCONFIG="multi_v7_defconfig"  # ARMv7通用配置，兼容Hi3798mv100
          fi
          echo "使用defconfig：$TARGET_DEFCONFIG"

          # 3. 生成.config文件
          cd $KERNEL_DIR
          make ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE $TARGET_DEFCONFIG V=1
          if [ ! -f ".config" ]; then
            echo "Error: .config生成失败"
            exit 1
          fi

      - name: 修复dtc错误
        run: |
          cd HiSTBLinux
          source ./env.sh
          cd source/kernel/linux-4.4.y
          make ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE prepare
          make ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE scripts/dtc
          sed -i 's/^extern YYLTYPE yylloc;/#extern YYLTYPE yylloc;/' scripts/dtc/dtc-lexer.lex.c

      - name: 配置内核功能
        run: |
          cd HiSTBLinux
          source ./env.sh
          cd source/kernel/linux-4.4.y
          echo "CONFIG_DEVTMPFS=y" >> .config
          echo "CONFIG_DEVTMPFS_MOUNT=y" >> .config
          echo "CONFIG_CGROUPS=y" >> .config
          echo "CONFIG_USB_PRINTER=y" >> .config
          echo "CONFIG_RTL8188FTV=y" >> .config

      - name: 编译内核和固件
        run: |
          cd HiSTBLinux
          source ./env.sh
          make linux -j4 2>&1 | tee kernel.log
          make build -j4 2>&1 | tee build.log

      - name: 上传产物
        uses: actions/upload-artifact@v4
        with:
          name: hi3798mv100-firmware
          path: |
            HiSTBLinux/out/hi3798mv100/*
            HiSTBLinux/kernel.log
            HiSTBLinux/build.log
