# .github/workflows/ec6108v9-build.yml
name: EC6108V9 Custom Firmware

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout SDK
      uses: actions/checkout@v3
      with:
        repository: xujjc/HiSTBLinuxV100R005C00SPC060
        ref: C00SPC060
        path: sdk

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git wget \
          libssl-dev bc u-boot-tools device-tree-compiler \
          flex bison mtd-utils zlib1g-dev

    - name: Setup Toolchain
      run: |
        wget https://releases.linaro.org/components/toolchain/binaries/7.4-2019.02/arm-linux-gnueabihf/gcc-linaro-7.4.1-2019.02-x86_64_arm-linux-gnueabihf.tar.xz
        tar -xf gcc-linaro-7.4.1-2019.02-x86_64_arm-linux-gnueabihf.tar.xz
        echo "${GITHUB_WORKSPACE}/gcc-linaro-7.4.1-2019.02-x86_64_arm-linux-gnueabihf/bin" >> $GITHUB_PATH

    - name: Prepare RTL8188FTV Driver
      run: |
        git clone https://github.com/lwfinger/rtl8188fu.git sdk/drivers/net/wireless/rtl8188fu
        echo 'obj-$(CONFIG_RTL8188FU) += rtl8188fu/' >> sdk/drivers/net/wireless/Kconfig

    - name: Patch Kernel Config
      working-directory: sdk
      run: |
        # 启用USB打印功能
        sed -i 's/CONFIG_USB_PRINTER=n/CONFIG_USB_PRINTER=y/' arch/arm/configs/hi3798mv100_defconfig
        
        # 添加Docker支持
        echo "CONFIG_DEVTMPFS=y" >> arch/arm/configs/hi3798mv100_defconfig
        echo "CONFIG_FHANDLE=y" >> arch/arm/configs/hi3798mv100_defconfig
        echo "CONFIG_CGROUPS=y" >> arch/arm/configs/hi3798mv100_defconfig

    - name: Configure Build
      working-directory: sdk
      run: |
        cp configs/hi3798mv100/hi3798mdmo1g_hi3798mv100_cfg.mak ./cfg.mak
        source env.sh
        make ARCH=arm hi3798mv100_defconfig

    - name: Build Firmware
      working-directory: sdk
      run: |
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j$(nproc)
        ./scripts/build_firmware.sh ec6108v9

    - name: Package Artifacts
      working-directory: sdk/output
      run: |
        tar -czvf ec6108v9-firmware-$(date +%Y%m%d).tar.gz \
          uImage \
          rootfs.img \
          drivers/net/wireless/rtl8188fu/8188fu.ko

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ec6108v9-firmware
        path: sdk/output/*.tar.gz
