name: 编译Hi3798mv100固件（最终修复.config生成问题）

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: 拉取源码仓库
        uses: actions/checkout@v4
        with:
          repository: zjkanjie/HiSTBLinuxV100R005C00SPC060
          path: HiSTBLinux

      - name: 安装依赖
        run: |
          sudo apt update
          sudo apt remove -y make
          wget http://archive.ubuntu.com/ubuntu/pool/main/m/make-dfsg/make_3.81-8.2ubuntu3_amd64.deb
          sudo dpkg -i make_3.81-8.2ubuntu3_amd64.deb
          sudo apt install -y gcc-arm-linux-gnueabihf gettext bison flex bc zlib1g-dev libncurses5-dev lzma git build-essential
          sudo ln -sf /bin/bash /bin/sh
          # 验证工具链
          arm-linux-gnueabihf-gcc --version | head -n1

      - name: 下载内核并修复dtc错误
        run: |
          cd HiSTBLinux
          # 下载并解压内核源码
          mkdir -p third_party/open_source/
          wget https://www.kernel.org/pub/linux/kernel/v4.x/linux-4.4.35.tar.gz -O third_party/open_source/linux-4.4.35.tar.gz
          tar -zxf third_party/open_source/linux-4.4.35.tar.gz -C source/kernel/
          mv source/kernel/linux-4.4.35 source/kernel/linux-4.4.y
          # 验证内核目录结构
          echo "内核源码目录结构："
          ls -la source/kernel/linux-4.4.y
          # 确认Kconfig文件存在
          if [ ! -f "source/kernel/linux-4.4.y/Kconfig" ]; then
            echo "Error: 内核源码中未找到Kconfig文件，解压失败"
            exit 1
          fi

          # 修复dtc错误
          cd source/kernel/linux-4.4.y
          make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- prepare
          make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- scripts/dtc
          sed -i 's@^extern YYLTYPE yylloc;@#extern YYLTYPE yylloc;  /* 注释重复定义 */@' scripts/dtc/dtc-lexer.lex.c

      - name: 准备RT8188FTV驱动
        run: |
          cd HiSTBLinux
          mkdir -p third_party/open_source/rtl8188ftv
          git clone https://github.com/kelebek333/rtl8188fu.git third_party/open_source/rtl8188ftv

      - name: 初始化SDK环境
        run: |
          cd HiSTBLinux
          bash server_install.sh
          cp configs/hi3798mv100/hi3798mdmo1g_hi3798mv100_cfg.mak ./cfg.mak
          source ./env.sh
          # 输出环境变量供调试
          echo "环境变量："
          env | grep -E '^ARCH|^CROSS_COMPILE|^KERNELDIR|^PATH'
          env | grep -E '^ARCH|^CROSS_COMPILE|^KERNELDIR|^PATH' > sdk_env.txt

      - name: 强制复制defconfig并生成.config（关键修复）
        run: |
          cd HiSTBLinux
          source sdk_env.txt
          cd source/kernel/linux-4.4.y
          # 明确defconfig来源路径（SDK的configs目录）
          SDK_DEFCONFIG_PATH="../../../../configs/hi3798mv100/hi3798mv100_defconfig"
          KERNEL_DEFCONFIG_PATH="arch/arm/configs/hi3798mv100_defconfig"
          
          # 复制defconfig到内核配置目录（增加详细日志）
          echo "复制defconfig：$SDK_DEFCONFIG_PATH -> $KERNEL_DEFCONFIG_PATH"
          if [ -f "$SDK_DEFCONFIG_PATH" ]; then
            cp "$SDK_DEFCONFIG_PATH" "$KERNEL_DEFCONFIG_PATH"
            # 验证复制结果
            if [ -f "$KERNEL_DEFCONFIG_PATH" ]; then
              echo "defconfig复制成功"
              cat "$KERNEL_DEFCONFIG_PATH" | head -n5  # 输出前5行确认内容
            else
              echo "Error: defconfig复制失败，目标文件不存在"
              exit 1
            fi
          else
            echo "Error: 源defconfig不存在：$SDK_DEFCONFIG_PATH"
            # 列出可能的路径供调试
            echo "SDK configs目录内容："
            ls -la ../../../../configs/hi3798mv100/
            exit 1
          fi
          
          # 强制生成.config文件（明确参数）
          echo "生成.config文件..."
          make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- hi3798mv100_defconfig V=1  # V=1输出详细日志
          
          # 验证.config是否生成
          if [ -f ".config" ]; then
            echo ".config生成成功，内容如下："
            cat .config | head -n10  # 输出前10行确认
          else
            echo "Error: .config文件仍未生成"
            # 输出make命令的错误日志（若有）
            echo "make defconfig的错误输出："
            cat .config.log 2>/dev/null
            exit 1
          fi

      - name: 配置内核功能
        run: |
          cd HiSTBLinux
          source sdk_env.txt
          cd source/kernel/linux-4.4.y
          # 基于已生成的.config添加配置
          sed -i '/CONFIG_USB_PRINTER/d' .config
          echo "CONFIG_USB=y" >> .config
          echo "CONFIG_USB_UHCI_HCD=y" >> .config
          echo "CONFIG_USB_OHCI_HCD=y" >> .config
          echo "CONFIG_USB_EHCI_HCD=y" >> .config
          echo "CONFIG_USB_PRINTER=y" >> .config
          echo "CONFIG_CGROUPS=y" >> .config
          echo "CONFIG_CGROUP_DEVICE=y" >> .config
          echo "CONFIG_CGROUP_CPUACCT=y" >> .config
          echo "CONFIG_DEVTMPFS=y" >> .config
          echo "CONFIG_DEVTMPFS_MOUNT=y" >> .config
          echo "CONFIG_FHANDLE=y" >> .config
          echo "CONFIG_CFG80211=y" >> .config
          echo "CONFIG_MAC80211=y" >> .config
          echo "CONFIG_RTL8188FTV=y" >> .config
          echo "CONFIG_RTLWIFI=y" >> .config
          echo "CONFIG_RTLWIFI_USB=y" >> .config
          echo "CONFIG_WIRELESS_EXT=y" >> .config
          echo "CONFIG_WEXT_CORE=y" >> .config
          
          # 更新配置
          make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- oldconfig V=1

      - name: 编译内核
        run: |
          cd HiSTBLinux
          source sdk_env.txt
          cd source/kernel/linux-4.4.y
          make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j2 V=1

      - name: 编译完整固件
        run: |
          cd HiSTBLinux
          source sdk_env.txt
          make build -j4 2>&1 | tee build.log
          mkbootargs -s 64 -r bootargs_input.txt -o out/hi3798mv100/bootargs.bin

      - name: 上传产物
        uses: actions/upload-artifact@v4
        with:
          name: hi3798mv100-firmware-final
          path: |
            HiSTBLinux/out/hi3798mv100/*
            HiSTBLinux/build.log
